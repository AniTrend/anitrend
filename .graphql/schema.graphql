# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Series node with ID"
interface SeriesNode {
    "The ID of the object."
    id: ID!
}

"The Relay compliant `PageInfo` type, containing data necessary to paginate this connection."
type PageInfo {
    "When paginating forwards, the cursor to continue."
    endCursor: String
    "When paginating forwards, are there more items?"
    hasNextPage: Boolean!
    "When paginating backwards, are there more items?"
    hasPreviousPage: Boolean!
    "When paginating backwards, the cursor to continue."
    startCursor: String
}

type Query {
    "Find specific series item"
    series(
        "AniDB Id"
        anidb: Int,
        "AniList Id"
        anilist: Int,
        "AnimePlanet Slug"
        animeplanet: String,
        "Series Id"
        id: ID,
        "Kitsu Id"
        kitsu: Int,
        "Mal Id"
        mal: Int,
        "Notify.moe Id"
        notify: String,
        "TVDB Id"
        tvdb: Int
    ): Series
    "Discover a from a paged list of items"
    seriesPaged(
        after: String,
        before: String,
        first: Int,
        last: Int,
        offset: Int,
        "Ordering"
        orderBy: String,
        title: String
    ): SeriesConnection
}

"Related media urls"
type Relation {
    series: Series!
    url: String!
}

"Single series model"
type Series implements SeriesNode {
    episodes: Int!
    "The ID of the object."
    id: ID!
    picture: String!
    relationSet: [Relation!]!
    source: Source!
    status: SeriesStatus!
    synonymSet: [Synonym!]!
    tagSet: [Tag!]!
    thumbnail: String!
    title: String!
    type: SeriesType!
    updatedAt: DateTime!
}

type SeriesConnection {
    "Contains the nodes in this connection."
    edges: [SeriesEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `Series` and its cursor."
type SeriesEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: Series
}

"Alternative source ids"
type Source {
    anidb: Int
    anilist: Int
    animeplanet: String
    kitsu: Int
    mal: Int
    notify: String
    series: Series
    tvdb: Int
}

"Alternative name model for a series"
type Synonym {
    "Alternative name for the series"
    name: String
    series: Series!
    title: String!
}

"Tags for a series"
type Tag {
    series: Series!
    title: String!
}

"An enumeration."
enum SeriesStatus {
    "CURRENTLY"
    CURRENTLY
    "FINISHED"
    FINISHED
    "UNKNOWN"
    UNKNOWN
    "UPCOMING"
    UPCOMING
}

"An enumeration."
enum SeriesType {
    "Movie"
    MOVIE
    "ONA"
    ONA
    "OVA"
    OVA
    "Special"
    SPECIAL
    "TV"
    TV
}


"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime